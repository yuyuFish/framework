<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">
		
	<!-- 自动扫描controller包下的所有类，使其认为spring mvc的控制器 -->
	<!-- <context:component-scan base-package="com.webcarrier.iframework.**.controller" />
	<context:component-scan base-package="com.arbitration.**.controller" />
	<context:component-scan base-package="com.commons.**.controller" /> -->
	<context:component-scan base-package="org.framework.authorize.*.controller"></context:component-scan>
	
	<mvc:annotation-driven enable-matrix-variables="true" />
	
	<!-- <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"></bean>
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"></bean> -->
		
	<mvc:default-servlet-handler/>
	
	
	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basename" value="classpath:/messages/messages"></property>
		<property name="fileEncodings" value="utf-8"></property>
	</bean>
	
	<!-- 通过配置文件制定映射 -->
	<!-- <bean class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
		<property name="mappings">
			<props>
				<prop key="/myMultiController/*">myMultiController</prop>
			</props>
		</property>
		<property name="order" value="1"></property>
	</bean> -->
	
	<!-- 通过请求参数来指定调用controller的方法 -->
	<!-- <bean id="myMultiController" class="com.zt.action.login.controller.MyMultiController">
		<property name="methodNameResolver" ref="internalPathMethodNameResolver"></property>
	</bean> -->
	
	<!-- 用于指定传递方法名的请求参数名称 -->
	<!-- <bean id="parameterMethodNameResolver" class="org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver">
		<property name="paramName" value="method"></property>
	</bean> -->
	
	<!-- 用于将请求路径匹配到controller上的特定方法 -->
	<!-- <bean id="internalPathMethodNameResolver" class="org.springframework.web.servlet.mvc.multiaction.InternalPathMethodNameResolver"></bean> -->
	
	
	<!-- 对模型视图名称的解析，即在模型视图名称添加前后缀 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/"/>
		<!-- <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"></property> -->
		<property name="suffix" value=".jsp"/>
	</bean>

	<!-- <bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding">
			<value>UTF-8</value>
		</property>
		<property name="maxUploadSize">
			<value>32505856</value>上传文件大小限制为31M，31*1024*1024
		</property>
		<property name="maxInMemorySize">
			<value>4096</value>
		</property>
	</bean> -->
	
	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver"></bean>

	<!-- 拦截器 -->
	<mvc:interceptors>
		<!-- <mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="com.webcarrier.iframework.common.interceptor.EncodingInterceptor" />
		</mvc:interceptor>
			<bean class="com.webcarrier.iframework.common.interceptor.SystemInterceptor" /> -->
		<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
			<property name="paramName" value="language"></property>
		</bean>
	</mvc:interceptors>

	<!-- 支持 Shiro对Controller的方法级AOP安全控制 begin-->
	<!-- <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>
	
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
    	<property name="securityManager" ref="securityManager"/>
	</bean>
	
	<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">  
        <property name="exceptionMappings">  
            <props>  
                <prop key="org.apache.shiro.authz.UnauthorizedException">error/error_404</prop>  
            </props>  
        </property>  
    </bean>   -->
	<!-- end -->
	
	<!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
	<!-- <bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean> -->

	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
	<!-- <bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" />
			</list>
		</property>
	</bean> -->
	<!-- begin patchca -->
	<bean id="beginColor" class="java.awt.Color">
		<constructor-arg index="0" type="int" value="0"></constructor-arg>
		<constructor-arg index="1" type="int" value="0"></constructor-arg>
		<constructor-arg index="2" type="int" value="0"></constructor-arg>
	</bean>
	
	<bean id="endColor" class="java.awt.Color">
		<constructor-arg index="0" type="int" value="150"></constructor-arg>
		<constructor-arg index="1" type="int" value="150"></constructor-arg>
		<constructor-arg index="2" type="int" value="150"></constructor-arg>
	</bean>
	
	
	
	<bean id="randomColorFactory" class="org.patchca.color.RandomColorFactory">
		<property name="min" ref="beginColor"></property>
		<property name="max" ref="endColor"></property>
	</bean>
	
	<bean id="curvesRippleFilterFactory" class="org.patchca.filter.predefined.CurvesRippleFilterFactory">
		<property name="colorFactory" ref="randomColorFactory"></property>
	</bean>
	
	<bean id="randomWordFactory" class="org.patchca.word.RandomWordFactory">
		<property name="characters" value="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz"></property>
		<property name="minLength" value="4"></property>
		<property name="maxLength" value="7"></property>
	</bean>
	
	<bean id="fontFactory" class="org.patchca.font.RandomFontFactory">
		<property name="minSize" value="32"></property>
		<property name="maxSize" value="40"></property>
	</bean>
	
	<bean id="configurableCaptchaService" class="org.patchca.service.ConfigurableCaptchaService">
		<property name="colorFactory" ref="randomColorFactory"></property>
		<property name="wordFactory" ref="randomWordFactory"></property>
		<property name="fontFactory" ref="fontFactory"></property>
		<property name="width" value="150"></property>
		<property name="height" value="40"></property>
	</bean>
	
	<!-- end patchca -->
	
</beans>