<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.framework.authorize.auth.mapper.AmPermissionMapper">
	<!-- <cache-ref namespace=""/> -->
	
	<sql id="select_permissionColumns">
	    ${alias}PERMISSION_ID as permissionId
		,${alias}PRODUCT_ID as productId
		,${alias}PERMISSION_NAME as permissionName
		,${alias}PERMISSION_INFO as permissionInfo
		,${alias}PERMISSION_URL as permissionUrl
		,${alias}PERMISSION_CODE as permissionCode
		,${alias}OPERATE_IP as operateIp
		,${alias}OPERATE_TYPE as operateType
		,${alias}REQUEST_TYPE as requestType
		,${alias}REQUEST_HEADERS as requestHeaders
		,${alias}REQUEST_PARAMETERS as requestParameters
		,${alias}LOGIC_TYPE as logicType
		,${alias}PERMISSION_CLASS_METHOD as permissionClassMethod
		,${alias}CREATE_TIME as createTime
		,${alias}EDIT_TIME as editTime
		,${alias}DELETE_TIME as deleteTime
		,${alias}DATA_STATE as dataState
	</sql>
	
	<sql id="insert_permissionColumns">
	    PERMISSION_ID
		,PRODUCT_ID
		,PERMISSION_NAME
		,PERMISSION_INFO
		,PERMISSION_URL
		,PERMISSION_CODE
		,OPERATE_IP
		,OPERATE_TYPE
		,REQUEST_TYPE
		,REQUEST_HEADERS
		,REQUEST_PARAMETERS
		,LOGIC_TYPE
		,PERMISSION_CLASS_METHOD
		,CREATE_TIME
		,EDIT_TIME
		,DELETE_TIME
		,DATA_STATE
	</sql>
	
	<resultMap type="org.framework.authorize.auth.model.AmPermission" id="amPermissionMapping" autoMapping="true">
	    <id property="permissionId" column="permissionId" />
		<result property="productId" column="productId" />
		<result property="permissionName" column="permissionName" />
		<result property="permissionInfo" column="permissionInfo" />
		<result property="permissionUrl" column="permissionUrl" />
		<result property="permissionCode" column="permissionCode" />
		<result property="operateIp" column="operateIp" />
		<result property="operateType" column="operateType" />
		<result property="requestType" column="requestType" />
		<result property="requestHeaders" column="requestHeaders" />
		<result property="requestParameters" column="requestParameters" />
		<result property="logicType" column="logicType" />
		<result property="permissionClassMethod" column="permissionClassMethod" />
		<result property="createTime" column="createTime" />
		<result property="editTime" column="editTime" />
		<result property="deleteTime" column="deleteTime" />
		<result property="dataState" column="dataState" />
	</resultMap>
	
	<insert id="save" parameterType="org.framework.authorize.auth.model.AmPermission">
	    insert into am_permission(<include refid="insert_permissionColumns"></include>)
	    values(
		    #{permissionId},
			#{productId},
			#{permissionName},
			#{permissionInfo},
			#{permissionUrl},
			#{permissionCode},
			#{operateIp},
			#{operateType},
			#{requestType},
			#{requestHeaders},
			#{requestParameters},
			#{logicType},
			#{permissionClassMethod},
			#{createTime},
			#{editTime},
			#{deleteTime},
			#{dataState}
	    )
	</insert>
	
	<update id="update" parameterType="org.framework.authorize.auth.model.AmPermission">
	    update am_permission 
	    set 
	    PRODUCT_ID=#{productId},
		,PERMISSION_NAME=#{permissionName},
		,PERMISSION_INFO=#{permissionInfo},
		,PERMISSION_URL=#{permissionUrl},
		,PERMISSION_CODE=#{permissionCode},
		,OPERATE_IP=#{operateIp},
		,OPERATE_TYPE=#{operateType},
		,REQUEST_TYPE=#{requestType},
		,REQUEST_HEADERS=#{requestHeaders},
		,REQUEST_PARAMETERS=#{requestParameters},
		,LOGIC_TYPE=#{logicType},
		,PERMISSION_CLASS_METHOD=#{permissionClassMethod},
		,CREATE_TIME=#{createTime},
		,EDIT_TIME=#{editTime},
		,DELETE_TIME=#{deleteTime},
		,DATA_STATE=#{dataState}
	    where PERMISSION_ID=#{permissionId}
	</update>
	
	<delete id="deleteById" parameterType="string">
	    delete from am_permission where PERMISSION_ID=#{_parameter}
	</delete>
	
	<select id="getById" parameterType="string" resultMap="amPermissionMapping">
	    select <include refid="select_permissionColumns"><property name="alias" value=""/></include>
	    from am_permission
	    where PERMISSION_ID=#{_parameter}
	</select>
	
	<select id="getAll" resultMap="amPermissionMapping">
	    select <include refid="select_permissionColumns"><property name="alias" value=""/></include>
	    from am_permission
	</select>
	
	<select id="getByWhere" resultMap="amPermissionMapping">
	    select <include refid="select_permissionColumns"><property name="alias" value=""/></include>
	    from am_permission
	    <if test="whereSql!=null">
        	<trim prefix="WHERE" prefixOverrides="OR | AND |WHERE ">${whereSql}</trim>
	    </if>
	</select>
	
	<select id="getByWherePage" resultMap="amPermissionMapping" databaseId="mysql">
	    select <include refid="select_permissionColumns"><property name="alias" value=""/></include>
	    from am_permission
	    <if test="whereSql!=null">
        	<trim prefix="WHERE" prefixOverrides="OR | AND |WHERE ">${whereSql}</trim>
	    </if>
	    <if test="startIndex!=null and size!=null">
	        LIMIT #{startIndex,javaType=long},#{size,javaType=long}
	    </if>
	</select>

</mapper>
